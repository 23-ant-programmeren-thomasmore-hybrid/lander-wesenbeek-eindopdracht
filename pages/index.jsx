import {CameraNode} from "three/addons/nodes/Nodes";

'use_client'
import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import styles from '../styles/Home.module.css'
import { Canvas, useFrame  } from '@react-three/fiber'
import {useRef, useState} from "react";
import {CameraControls, CameraShake, OrbitControls, OrthographicCamera} from '@react-three/drei'


const inter = Inter({ subsets: ['latin'] })

export default function Home() {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main Style={"width:1900px; height:738px"}>
        <div Style={"width:100%; height:100%"} >
        <Canvas Style={"width:100%; height:100%"}>
            <RenderPickels/>

            <ambientLight intensity={0.05} />
            <directionalLight color="#fff9db" position={[0, 1, 1]} />

            <CameraControls></CameraControls>
            <OrthographicCamera></OrthographicCamera>
        </Canvas>

        </div>
      </main>
    </>
  )
}

function RenderPickels(){
    const ref = useRef()
    useFrame((state, delta) => (ref.current.rotation.y += delta * 0.2,ref.current.rotation.x += delta * 0.1))
    const [hovered, hover] = useState(false)
    const [scale, setScale] = useState(1)

    return (
        <mesh
            ref={ref}
            position={0,0,0}
            scale={scale}
            onPointerOver={(event) => (setScale(scale+0.2) , hover(true))}
            onPointerOut={(event) => hover(false)}>

            <boxGeometry args={[1, 1, 1]} />
            <meshStandardMaterial color={hovered ? 'hotpink' : 'orange'}/>
        </mesh>
    )
}
